{"ast":null,"code":"var _jsxFileName = \"/home/nrestrepo05/repos/todo/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\n\nconst login = () => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: usernameError,\n    1: setUsernameError\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: Error,\n    1: setError\n  } = useState('');\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const request = await fetch('https://todo-nrestrepo05-api.herokuapp.com/api-token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      console.log(username.error);\n      console.log(password.error);\n      console.log(request.status);\n      const data = await request.json();\n      console.log(data);\n      if (data && data.password) return setPasswordError;\n\n      if (data && data.non_field_errors) {\n        setLoginError(data.non_field_errors);\n      }\n\n      if (data && data.token) {\n        cookie.set('token', data.token);\n        Router.push('/');\n      }\n    } catch (error) {\n      setLoginError(error);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    action: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, loginError ? __jsx(\"div\", {\n    className: \"Error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 24\n    }\n  }, \"Usuario o contrase\\xF1a incorrectos\") : '', __jsx(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    value: username,\n    placeholder: \"username\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    placeholder: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Log In!\")));\n};\n\nexport default login;","map":{"version":3,"sources":["/home/nrestrepo05/repos/todo/pages/login.js"],"names":["useState","cookie","Router","login","username","setUsername","usernameError","setUsernameError","password","setPassword","Error","setError","loginError","setLoginError","handleSubmit","e","preventDefault","request","fetch","method","headers","body","JSON","stringify","console","log","error","status","data","json","setPasswordError","non_field_errors","token","set","push","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\n\nconst login = () => {\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [password, setPassword] = useState('');\n  const [Error, setError] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const request = await fetch('https://todo-nrestrepo05-api.herokuapp.com/api-token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      });\n      console.log(username.error);\n      console.log(password.error);\n      console.log(request.status);\n      const data = await request.json();\n      console.log(data);\n      if (data && data.password) return setPasswordError\n      if (data && data.non_field_errors) {\n        setLoginError(data.non_field_errors);\n      }\n      if (data && data.token) {\n        cookie.set('token', data.token);\n        Router.push('/');\n      }\n    } catch (error) {\n      setLoginError(error);\n    }\n  };\n\n  return (\n    <>\n      <form action=\"\" method=\"post\">\n        { loginError ? <div className=\"Error\">Usuario o contrase√±a incorrectos</div> : '' }\n        <input\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          value={username}\n          placeholder=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\" onClick={handleSubmit}>\n          Log In!\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}