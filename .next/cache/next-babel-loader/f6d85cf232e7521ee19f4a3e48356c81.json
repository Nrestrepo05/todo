{"ast":null,"code":"var _jsxFileName = \"/home/nrestrepo05/repos/todo/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\n\nconst login = () => {\n  const {\n    0: username,\n    1: setUsername\n  } = useState('');\n  const {\n    0: usernameError,\n    1: setUsernameError\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState('');\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const request = await fetch('https://todo-nrestrepo05-api.herokuapp.com/api-token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await request.json();\n      if (data && data.password) return setPasswordError(data.password);\n      if (data && data.username) return setUsernameError(data.username);\n\n      if (data && data.non_field_errors) {\n        setLoginError(data.non_field_errors);\n      }\n\n      if (data && data.token) {\n        cookie.set('token', data.token);\n        Router.push('/');\n      }\n    } catch (error) {\n      setLoginError(error);\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"form\", {\n    action: \"\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, loginError ? __jsx(\"div\", {\n    className: \"Error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 24\n    }\n  }, \"Usuario o contrase\\xF1a incorrectos\") : '', __jsx(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    value: username,\n    placeholder: \"username\",\n    onChange: e => setUsername(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), usernameError ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 27\n    }\n  }, usernameError) : '', __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    value: password,\n    placeholder: \"password\",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), passwordError ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  }, passwordError) : '', __jsx(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"Log In!\")));\n};\n\nexport default login;","map":{"version":3,"sources":["/home/nrestrepo05/repos/todo/pages/login.js"],"names":["useState","cookie","Router","login","username","setUsername","usernameError","setUsernameError","password","setPassword","passwordError","setPasswordError","loginError","setLoginError","handleSubmit","e","preventDefault","request","fetch","method","headers","body","JSON","stringify","data","json","non_field_errors","token","set","push","error","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport cookie from 'js-cookie';\nimport Router from 'next/router';\n\nconst login = () => {\n  const [username, setUsername] = useState('');\n  const [usernameError, setUsernameError] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const request = await fetch('https://todo-nrestrepo05-api.herokuapp.com/api-token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username,\n          password,\n        }),\n      });\n      const data = await request.json();\n      if (data && data.password) return setPasswordError(data.password);\n      if (data && data.username) return setUsernameError(data.username);\n      if (data && data.non_field_errors) {\n        setLoginError(data.non_field_errors);\n      }\n      if (data && data.token) {\n        cookie.set('token', data.token);\n        Router.push('/');\n      }\n    } catch (error) {\n      setLoginError(error);\n    }\n  };\n\n  return (\n    <>\n      <form action=\"\" method=\"post\">\n        { loginError ? <div className=\"Error\">Usuario o contrase√±a incorrectos</div> : '' }\n        <input\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          value={username}\n          placeholder=\"username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        { usernameError ? <span>{usernameError}</span> : ''}\n        <input\n          type=\"password\"\n          name=\"password\"\n          id=\"password\"\n          value={password}\n          placeholder=\"password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        { passwordError ? <span>{passwordError}</span> : ''}\n        <button type=\"submit\" onClick={handleSubmit}>\n          Log In!\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}