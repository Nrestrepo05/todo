{"ast":null,"code":"var _jsxFileName = \"/home/nrestrepo05/repos/todo/pages/login.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { useState, useContext } from 'react';\nimport Router from 'next/router';\nimport { userContext } from '../userContext';\nimport Layout from '../components/Layout';\nimport useInputValue from '../hooks/useInputValue';\nimport Input from '../components/Input';\nimport Form from '../components/';\n\nconst login = () => {\n  // const [username, setUsername] = useState('');\n  // const [password, setPassword] = useState('');\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState('');\n  const {\n    activateAuth\n  } = useContext(userContext);\n  const username = useInputValue('');\n  const password = useInputValue('');\n\n  const handleSubmit = async e => {\n    setLoginError('');\n    e.preventDefault();\n\n    try {\n      const request = await fetch('https://todo-nrestrepo05-api.herokuapp.com/api-token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username.value,\n          password: password.value\n        })\n      });\n      const data = await request.json();\n\n      if (request.status === 400) {\n        setLoginError(true);\n      }\n\n      if (data && data.token) {\n        activateAuth(data.token);\n        Router.push('/');\n      }\n    } catch (error) {\n      setLoginError(error);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Input, _extends({\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"username\"\n  }, username, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), __jsx(Input, _extends({\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"password\"\n  }, password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }))), __jsx(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Log In!\"));\n};\n\nexport default login;","map":{"version":3,"sources":["/home/nrestrepo05/repos/todo/pages/login.js"],"names":["useState","useContext","Router","userContext","Layout","useInputValue","Input","Form","login","loginError","setLoginError","activateAuth","username","password","handleSubmit","e","preventDefault","request","fetch","method","headers","body","JSON","stringify","value","data","json","status","token","push","error"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AACA,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAmBV,UAAU,CAACE,WAAD,CAAnC;AACA,QAAMS,QAAQ,GAAGP,aAAa,CAAC,EAAD,CAA9B;AACA,QAAMQ,QAAQ,GAAGR,aAAa,CAAC,EAAD,CAA9B;;AAEA,QAAMS,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCL,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAK,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,4DAAD,EAA+D;AACxFC,QAAAA,MAAM,EAAE,MADgF;AAExFC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF+E;AAKxFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBX,UAAAA,QAAQ,EAAEA,QAAQ,CAACY,KADA;AAEnBX,UAAAA,QAAQ,EAAEA,QAAQ,CAACW;AAFA,SAAf;AALkF,OAA/D,CAA3B;AAUA,YAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,IAAR,EAAnB;;AACA,UAAIT,OAAO,CAACU,MAAR,KAAmB,GAAvB,EAA4B;AAC1BjB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;;AACD,UAAIe,IAAI,IAAIA,IAAI,CAACG,KAAjB,EAAwB;AACtBjB,QAAAA,YAAY,CAACc,IAAI,CAACG,KAAN,CAAZ;AACA1B,QAAAA,MAAM,CAAC2B,IAAP,CAAY,GAAZ;AACD;AACF,KAnBD,CAmBE,OAAOC,KAAP,EAAc;AACdpB,MAAAA,aAAa,CAACoB,KAAD,CAAb;AACD;AACF,GAzBD;;AA2BA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC;AAHd,KAIMlB,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAOE,MAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC;AAHd,KAIMC,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPF,CADF,EAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAfF,CADF;AAqBD,CAxDD;;AA0DA,eAAeN,KAAf","sourcesContent":["import { useState, useContext } from 'react';\nimport Router from 'next/router';\nimport { userContext } from '../userContext';\nimport Layout from '../components/Layout';\nimport useInputValue from '../hooks/useInputValue';\nimport Input from '../components/Input';\nimport Form from '../components/'\n\nconst login = () => {\n  // const [username, setUsername] = useState('');\n  // const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n  const { activateAuth } = useContext(userContext);\n  const username = useInputValue('');\n  const password = useInputValue('');\n\n  const handleSubmit = async (e) => {\n    setLoginError('');\n    e.preventDefault();\n    try {\n      const request = await fetch('https://todo-nrestrepo05-api.herokuapp.com/api-token-auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: username.value,\n          password: password.value,\n        }),\n      });\n      const data = await request.json();\n      if (request.status === 400) {\n        setLoginError(true);\n      }\n      if (data && data.token) {\n        activateAuth(data.token);\n        Router.push('/');\n      }\n    } catch (error) {\n      setLoginError(error);\n    }\n  };\n\n  return (\n    <Layout>\n      <Form>\n        <Input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"username\"\n          {...username}\n        />\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          {...password}\n        />\n      </Form>\n      <button type=\"submit\" onClick={handleSubmit}>\n        Log In!\n      </button>\n    </Layout>\n  );\n};\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}